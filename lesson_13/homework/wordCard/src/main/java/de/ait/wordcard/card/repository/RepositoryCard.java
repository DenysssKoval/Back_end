package de.ait.wordcard.card.repository;

import de.ait.wordcard.card.entity.Card;
import org.springframework.data.jpa.repository.JpaRepository;

public interface RepositoryCard extends JpaRepository<Card, Long> {

}

/*
Что предоставляет JpaRepository?
JpaRepository предоставляет множество полезных методов для работы с данными, такие как:

findAll(): Возвращает список всех сущностей.
findById(ID id): Ищет сущность по её идентификатору.
save(S entity): Сохраняет сущность в базе данных.
deleteById(ID id): Удаляет сущность по её идентификатору.
count(): Возвращает количество всех сущностей.
Эти методы уже реализованы и могут быть использованы без необходимости их явно описывать в коде. Интерфейс RepositoryCard унаследует все эти методы и станет интерфейсом репозитория для работы с сущностями Card.

Преимущества использования Spring Data JPA
Быстрое создание репозиториев: Благодаря наследованию от JpaRepository, вам не нужно вручную реализовывать методы для стандартных операций с базой данных.
Снижение количества кода: Сокращает количество шаблонного кода, что делает ваш код более чистым и читаемым.
Гибкость: Spring Data JPA позволяет легко добавлять пользовательские методы и использовать аннотации для сложных запросов, что делает работу с данными гибкой и мощной.
Заключение
Ваш интерфейс RepositoryCard представляет собой репозиторий Spring Data JPA, который используется для работы с сущностями Card. Он наследует стандартные методы для операций CRUD от JpaRepository, что упрощает взаимодействие с базой данных и значительно уменьшает количество необходимого кода.
 */